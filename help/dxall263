#!F-adobe-helvetica-medium-r-normal--18*
#!N 
#!CSlateBlue #!N  #!Rxmod 
Data Explorer Execution Model #!N #!EC #!N #!N Data Explorer's execution 
model is based on the data flow concept. However, features are 
provided that extend the data flow concept to allow you to 
create a visual program that could not be supported by simple 
data flow. For example, there are tools that allow you to 
explicitly save partial results of a visual program to be used 
in a subsequent execution. Data Explorer also provides you with various 
tools to control the flow of execution of your visual programs. 
Most of these tools are analogous to constructs found in commonly 
used programming languages. For example, tools are provided that perform the 
function of IF statements, CASE statements and FOR (or DO) loops. 
This chapter discusses flow-control tools (with several examples of their use) 
both individually and in combination. #!N #!N Although it is not 
necessary to understand all the details of the Data Explorer execution 
model in order to build and run visual programs, you may 
find it helpful as you build visual programs. Other topics in 
this chapter include caching of intermediate results, conditional execution using the 
Route and Switch modules, iteration using the Sequencer, simple iteration using 
the looping modules, preservation of state using the pairs GetLocal/SetLocal or 
GetGlobal/SetGlobal, creating advanced looping constructs using combinations of tools, asynchronous data 
sources, and parallelism. The tools that control the flow of execution 
of a visual program are found in the Data Explorer category 
 #!F-adobe-times-bold-r-normal--18*   Flow Control #!EF . #!N #!N #!N  #!F-adobe-times-medium-i-normal--18*   Next Topic 
#!EF #!N #!N  #!Lall263,dxall264 h Data Flow  #!EL  #!N  #!F-adobe-times-medium-i-normal--18*   #!N 
