#!F-adobe-helvetica-medium-r-normal--18*
#!N 
#!CSeaGreen #!N  #!Rcolmap Color Mapping #!N #!EC #!N #!N Data 
Explorer provides an automatically generated color map (AutoColor), an automatically generated 
grayscale (AutoGrayScale), and a user-definable color map (the Colormap module that 
attaches to the Color module). A color map represents a relationship 
between a continuous range of floating point numeric data values and 
a set of color values. Frequently, you will encounter color maps 
with continuous ("spectral") color tones like a rainbow, but there is 
no requirement that color maps appear continuous. Each color map has 
associated with it a minimum and a maximum scalar value. You 
can either specify the minimum and maximum or connect the data 
Field to the Colormap module and have these values automatically extracted. 
#!N #!N We can describe "color" to a computer in a 
number of ways. One of the more intuitive is the "hue-saturation-value" 
model used by Data Explorer's Colormap tool. Hue is the color's 
"name," like blue, red, and so on. Hue is considered to 
form a circle from red through yellow, green, cyan, blue, magenta, 
and back to red; think of Hue as an "angle" around 
this color wheel (scaled from 0.0 to 1.0). Saturation is the 
"richness" of a color. Decreasing the Saturation of a color from 
1.0 to 0.0 makes the color progressively more pastel, so for 
example, bright red becomes light red, then pink, finally turning white. 
You can think of decreasing the Saturation as adding "white paint" 
to paint of a pure hue. At Saturation 0.0, any color 
becomes white (assuming Value is held at 1.0). Similarly, Value is 
a measure of the amount of "black paint" mixed with a 
color. As you decrease the color's Value from 1.0 to 0.0, 
you add more "black," so bright red becomes progressively darker red, 
and finally black. Any color becomes black at a Value of 
0.0. All three of these parameters interact, so you can adjust 
Hue and decrease Saturation and Value to get a "dark pastel 
blue." #!N #!N Another scheme for describing color is RGB (Red-Green-Blue). 
As in the HSV model just described, you specify a color 
as a triplet (a 3-vector). Each component can have a value 
from 0.0 to 1.0. If all three are 0.0, the resulting 
color is black; if all three are 1.0, you get white. 
Given Red = 1.0, Green = 0.0, Blue = 0.0, the 
color is fully saturated bright red. You can observe a graph 
of RGB lines at the far left of the Colormap tool 
as you manipulate the colors using the Hue-Saturation-Value (HSV) controls. You 
can specify an RGB vector in the Color module in place 
of connecting a Colormap if you want the output object to 
have a single color (or you can specify one of the 
X Window System color names). And you can convert from RGB 
to HSV or back using the Convert module. See  #!Lcolor,dxall792 h Color  #!EL  and 
 #!Lcolrmap,dxall794 h Colormap  #!EL  in IBM Visualization Data Explorer User's Reference for more details 
about these different specification schemes. #!N #!N Let us assume that 
we have set the Colormap minimum and maximum to equal the 
minimum and maximum of the temperature data we collected in the 
atmosphere (this is done automatically if you connect the data Field 
to the input on Colormap). Recall that we collected position-dependent data, 
one temperature value at each grid position. For this example, assume 
the minimum temperature measured was 0 degrees Centigrade and the maximum 
20. What color is 10? That depends entirely on the color 
map used. If we have a standard spectral (rainbow) map with 
blue at 0 and red at 20, then 10 would have 
a color halfway between blue and red. On the default color 
map, this would be green. When we ask Data Explorer to 
color-map our data, it examines each data value, performs a linear 
interpolation between the minimum and maximum values to find the color 
associated with that interpolated value in the color map and "colorizes" 
the object at all points containing that data value with that 
color. #!N #!N If we change the maximum value in the 
color map to 30, the measured data value of 10 (taken 
from the same data set as above) will now map to 
a cyan color, part way between blue and green. On the 
other hand, we could keep our same extreme values but manipulate 
the color map's color distribution in such a way that any 
value has any color we like. You can learn the details 
about this capability in  #!Lcolmape,dxall365 h Using the Colormap Editor  #!EL  . #!N #!N The best way 
to learn about the power of color mapping is to take 
some sample data, color-map it, then manipulate the settings in the 
Colormap Editor you have connected to the Color module your data 
Field passes through. Note: Choose  #!F-adobe-times-bold-r-normal--18*   Execute on Change #!EF from 
the Colormap Editor  #!F-adobe-times-bold-r-normal--18*   Execute #!EF menu and you will see 
the data change colors as soon as you make a change 
in the Colormap Editor.) #!N #!N For instance, you can create 
sharp color discontinuities by placing two control points close together vertically 
on the Hue control line, then dragging one horizontally away from 
the other. This can be used to indicate a sharp edge 
transition in your data. It is sometimes useful to place a 
special contrasting color in the middle of an otherwise continuous color 
map. For example, to highlight the value of 12 degrees C 
in our temperature data, we could insert a sharply defined red 
notch or band into the middle of our smooth rainbow color 
map. This would highlight that particular value or range for someone 
examining the scene. You can automatically generate a number of control 
point patterns by choosing  #!F-adobe-times-bold-r-normal--18*   Generate Waveforms... #!EF from the  #!F-adobe-times-bold-r-normal--18*   
Edit #!EF menu in the Colormap window. To make a notch, 
choose one of the "S" shaped curves from the pop-up menu 
in the  #!F-adobe-times-bold-r-normal--18*   Generate Waveforms #!EF dialog box. Set the number 
of Steps to 4 to make a single notch, or 3 
to make a single step. Click  #!F-adobe-times-bold-r-normal--18*   Apply #!EF to place 
control points on the currently chosen curve (Hue, Saturation, Value, or 
Opacity). You can then drag the new control points where you 
like. #!N #!N If you use a red color notch in 
the middle of your data range, you probably will not want 
to use red elsewhere in your color map or it will 
be difficult for a viewer to tell the 12-degree specially highlighted 
red area from the 20-degree red maximum values (assuming 20 is 
the maximum). In fact, it might be safer to use a 
white or gray color to mark the special value of 12 
degrees. Do this by creating a notch on the Saturation or 
Value curves instead of on the Hue curve. #!N #!N Similarly, 
you can change the  #!F-adobe-times-medium-i-normal--18*   opacity #!EF of objects. Opacity is 
the inverse of transparency: that is, the more opaque the object, 
the less transparent. You can set opacity to a value between 
0.0 and 1.0. Opacities less than 1.0 allow you to see 
through an object to reveal objects inside or behind the transparent 
object. For all objects except volumes, an Opacity of 0.0 will 
make the object disappear completely. Since Data Explorer uses an emissive 
volume rendering technique, you must set the color of a volume 
to "black" (RGB of [0, 0, 0]), as well as setting 
the Opacity to 0.0, to make the volume disappear. You will 
notice that when you view slightly transparent objects through each other, 
the colors of each object combine, making it very difficult to 
accurately assess the color of any one object. Used sparingly, opacity 
is a very powerful tool for examining the insides of objects 
or volumes and gauging the physical relationships between intersecting objects. #!N 
#!N You can create a variable opacity on an object by 
manipulating the opacity curve in Colormap. This can make parts of 
an object trail off to transparency, useful if some data values 
are not of interest. Be aware that "hiding" data in this 
way may mislead someone viewing your results. But in some data 
sets, there may be a large number of "noisy" data values 
that you would like to exclude in order to see the 
"signal" data values of interest. In that case, setting an Opacity 
notch to hide the noisy values may be the best visualization 
technique. #!N #!N When you lower opacity below 1.0, you will 
see two stripes, one white and one black, or a checkerboard 
pattern of black and white behind the sample color strip in 
the Colormap Editor. These are useful when you manipulate Opacity to 
check the apparent color against both a light and dark background. 
As with the color tools, you can turn on  #!F-adobe-times-bold-r-normal--18*   Execute 
On Change #!EF and interactively play with the Opacity of the 
selected object until you get the effect you want. #!N #!N 
#!N  #!F-adobe-times-medium-i-normal--18*   Next Topic #!EF #!N #!N  #!Lcntiso,dxall601 h Contours and Isosurfaces  #!EL  #!N  #!F-adobe-times-medium-i-normal--18*   #!N 

